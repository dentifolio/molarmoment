{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfficeDashboard = ({\n  user\n}) => {\n  _s();\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [updateMessage, setUpdateMessage] = useState(\"\");\n  useEffect(() => {\n    if (user) fetchAvailability();\n  }, [user]);\n  const fetchAvailability = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      const office = response.data.find(o => o.id === user.email);\n      if (office) setAvailableSlots(office.availableSlots);\n    } catch (error) {\n      console.error(\"Error fetching availability:\", error);\n    }\n  };\n  const toggleSlot = slot => {\n    setSelectedSlots(prevSlots => prevSlots.includes(slot) ? prevSlots.filter(s => s !== slot) : [...prevSlots, slot]);\n  };\n  const updateAvailability = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/update-availability\", {\n        email: user.email,\n        availableSlots: selectedSlots\n      });\n      if (response.data.message) {\n        setUpdateMessage(\"Availability updated successfully!\");\n        setAvailableSlots(selectedSlots);\n        setTimeout(() => setUpdateMessage(\"\"), 3000); // Clear message after 3s\n      }\n    } catch (error) {\n      console.error(\"Error updating availability:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"600px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this), \" \", user.city, \", \", user.state, \", \", user.zipCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Available Hours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"10px\"\n      },\n      children: [\"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\"].map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleSlot(slot),\n        style: {\n          padding: \"10px\",\n          backgroundColor: selectedSlots.includes(slot) ? \"#28a745\" : \"#ccc\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateAvailability,\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px\",\n        backgroundColor: \"#007bff\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\"\n      },\n      children: \"Update Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), updateMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\",\n        marginTop: \"10px\"\n      },\n      children: updateMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(OfficeDashboard, \"+7exQcoNcALcyT+G4QXxy8tC4hs=\");\n_c = OfficeDashboard;\nexport default OfficeDashboard;\nvar _c;\n$RefreshReg$(_c, \"OfficeDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OfficeDashboard","user","_s","availableSlots","setAvailableSlots","selectedSlots","setSelectedSlots","updateMessage","setUpdateMessage","fetchAvailability","response","get","office","data","find","o","id","email","error","console","toggleSlot","slot","prevSlots","includes","filter","s","updateAvailability","post","message","setTimeout","style","padding","maxWidth","margin","children","name","fileName","_jsxFileName","lineNumber","columnNumber","city","state","zipCode","display","flexWrap","gap","map","onClick","backgroundColor","color","border","borderRadius","cursor","marginTop","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst OfficeDashboard = ({ user }) => {\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [updateMessage, setUpdateMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (user) fetchAvailability();\n  }, [user]);\n\n  const fetchAvailability = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      const office = response.data.find(o => o.id === user.email);\n      if (office) setAvailableSlots(office.availableSlots);\n    } catch (error) {\n      console.error(\"Error fetching availability:\", error);\n    }\n  };\n\n  const toggleSlot = (slot) => {\n    setSelectedSlots((prevSlots) =>\n      prevSlots.includes(slot)\n        ? prevSlots.filter((s) => s !== slot)\n        : [...prevSlots, slot]\n    );\n  };\n\n  const updateAvailability = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/update-availability\", {\n        email: user.email,\n        availableSlots: selectedSlots,\n      });\n\n      if (response.data.message) {\n        setUpdateMessage(\"Availability updated successfully!\");\n        setAvailableSlots(selectedSlots);\n        setTimeout(() => setUpdateMessage(\"\"), 3000); // Clear message after 3s\n      }\n    } catch (error) {\n      console.error(\"Error updating availability:\", error);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"600px\", margin: \"auto\" }}>\n      <h2>Welcome, {user.name}</h2>\n      <p><strong>Location:</strong> {user.city}, {user.state}, {user.zipCode}</p>\n\n      <h3>Select Available Hours</h3>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"10px\" }}>\n        {[\"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\"].map((slot) => (\n          <button\n            key={slot}\n            onClick={() => toggleSlot(slot)}\n            style={{\n              padding: \"10px\",\n              backgroundColor: selectedSlots.includes(slot) ? \"#28a745\" : \"#ccc\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n            }}\n          >\n            {slot}\n          </button>\n        ))}\n      </div>\n\n      <button\n        onClick={updateAvailability}\n        style={{\n          marginTop: \"20px\",\n          padding: \"10px\",\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n        }}\n      >\n        Update Availability\n      </button>\n\n      {updateMessage && <p style={{ color: \"green\", marginTop: \"10px\" }}>{updateMessage}</p>}\n    </div>\n  );\n};\n\nexport default OfficeDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}