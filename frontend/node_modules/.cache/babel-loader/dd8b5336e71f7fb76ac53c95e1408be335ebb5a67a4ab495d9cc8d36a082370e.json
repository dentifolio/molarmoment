{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let hour = 5; hour <= 21; hour++) {\n    const amPm = hour >= 12 ? \"PM\" : \"AM\";\n    const formattedHour = hour > 12 ? hour - 12 : hour;\n    slots.push(`${formattedHour}:00 ${amPm}`);\n    slots.push(`${formattedHour}:30 ${amPm}`);\n  }\n  return slots;\n};\nconst OfficeDashboard = ({\n  user\n}) => {\n  _s();\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [newSlot, setNewSlot] = useState(\"\");\n  const timeSlots = generateTimeSlots();\n  useEffect(() => {\n    if (user) {\n      setAvailableSlots(user.availableSlots || []);\n    }\n  }, [user]);\n  const addSlot = async () => {\n    if (!newSlot) return alert(\"Select a valid time slot!\");\n    const updatedSlots = [...availableSlots, newSlot];\n    try {\n      const response = await axios.post(\"http://localhost:5000/update-availability\", {\n        email: user.email,\n        availableSlots: updatedSlots\n      });\n      setAvailableSlots(response.data.office.availableSlots);\n      setNewSlot(\"\");\n    } catch (error) {\n      console.error(\"Failed to update slots\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Available Slots:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableSlots.length > 0 ? availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: slot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 47\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No available slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: newSlot,\n      onChange: e => setNewSlot(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Time Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), timeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: slot,\n        children: slot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSlot,\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\",\n        marginLeft: \"10px\"\n      },\n      children: \"Add Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(OfficeDashboard, \"rwZyBnUQ7DD6kZDddvG2YekrrAY=\");\n_c = OfficeDashboard;\nexport default OfficeDashboard;\nvar _c;\n$RefreshReg$(_c, \"OfficeDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","generateTimeSlots","slots","hour","amPm","formattedHour","push","OfficeDashboard","user","_s","availableSlots","setAvailableSlots","newSlot","setNewSlot","timeSlots","addSlot","alert","updatedSlots","response","post","email","data","office","error","console","children","name","fileName","_jsxFileName","lineNumber","columnNumber","length","map","slot","index","value","onChange","e","target","onClick","style","backgroundColor","color","marginLeft","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let hour = 5; hour <= 21; hour++) {\n    const amPm = hour >= 12 ? \"PM\" : \"AM\";\n    const formattedHour = hour > 12 ? hour - 12 : hour;\n    slots.push(`${formattedHour}:00 ${amPm}`);\n    slots.push(`${formattedHour}:30 ${amPm}`);\n  }\n  return slots;\n};\n\nconst OfficeDashboard = ({ user }) => {\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [newSlot, setNewSlot] = useState(\"\");\n  const timeSlots = generateTimeSlots();\n\n  useEffect(() => {\n    if (user) {\n      setAvailableSlots(user.availableSlots || []);\n    }\n  }, [user]);\n\n  const addSlot = async () => {\n    if (!newSlot) return alert(\"Select a valid time slot!\");\n\n    const updatedSlots = [...availableSlots, newSlot];\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/update-availability\", {\n        email: user.email,\n        availableSlots: updatedSlots,\n      });\n\n      setAvailableSlots(response.data.office.availableSlots);\n      setNewSlot(\"\");\n    } catch (error) {\n      console.error(\"Failed to update slots\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Welcome, {user.name}</h2>\n      <h3>Your Available Slots:</h3>\n\n      <ul>\n        {availableSlots.length > 0 ? (\n          availableSlots.map((slot, index) => <li key={index}>{slot}</li>)\n        ) : (\n          <p>No available slots</p>\n        )}\n      </ul>\n\n      <select value={newSlot} onChange={(e) => setNewSlot(e.target.value)}>\n        <option value=\"\">Select Time Slot</option>\n        {timeSlots.map((slot, index) => (\n          <option key={index} value={slot}>\n            {slot}\n          </option>\n        ))}\n      </select>\n      <button onClick={addSlot} style={{ backgroundColor: \"green\", color: \"white\", marginLeft: \"10px\" }}>\n        Add Slot\n      </button>\n    </div>\n  );\n};\n\nexport default OfficeDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}