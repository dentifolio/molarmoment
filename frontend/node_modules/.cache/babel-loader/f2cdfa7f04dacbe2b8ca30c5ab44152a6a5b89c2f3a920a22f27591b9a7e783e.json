{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"600px\"\n};\nconst center = {\n  lat: 40.7128,\n  // Default to New York\n  lng: -74.006\n};\nconst PublicMapView = () => {\n  _s();\n  const [offices, setOffices] = useState([]);\n  const [selectedOffice, setSelectedOffice] = useState(null);\n  const [bookingStatus, setBookingStatus] = useState(null);\n  useEffect(() => {\n    fetchOffices();\n  }, []);\n  const fetchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n    } catch (error) {\n      console.error(\"Error fetching offices:\", error);\n    }\n  };\n  const handleBooking = async (officeId, timeSlot) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/book-slot\", {\n        officeId,\n        timeSlot\n      });\n      if (response.data.success) {\n        setBookingStatus(`Successfully booked ${timeSlot}!`);\n        fetchOffices(); // Refresh availability after booking\n      } else {\n        setBookingStatus(\"Booking failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error booking slot:\", error);\n      setBookingStatus(\"Booking failed. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find a Dental Office\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), bookingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: bookingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: center,\n        zoom: 12,\n        children: [offices.map(office => office.location ? /*#__PURE__*/_jsxDEV(Marker, {\n          position: office.location,\n          onClick: () => setSelectedOffice(office)\n        }, office.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this) : null), selectedOffice && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: selectedOffice.location,\n          onCloseClick: () => setSelectedOffice(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedOffice.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", selectedOffice.city, \", \", selectedOffice.state, \", \", selectedOffice.zipCode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Slots:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), selectedOffice.availableSlots.length > 0 ? selectedOffice.availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBooking(selectedOffice.id, slot),\n              style: {\n                margin: \"5px\",\n                padding: \"10px\",\n                cursor: \"pointer\",\n                backgroundColor: \"#28a745\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"5px\"\n              },\n              children: slot\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No slots available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicMapView, \"AI/0rMORaPaCkoeJpY6m7s52USw=\");\n_c = PublicMapView;\nexport default PublicMapView;\nvar _c;\n$RefreshReg$(_c, \"PublicMapView\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","mapContainerStyle","width","height","center","lat","lng","PublicMapView","_s","offices","setOffices","selectedOffice","setSelectedOffice","bookingStatus","setBookingStatus","fetchOffices","response","get","data","error","console","handleBooking","officeId","timeSlot","post","success","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","googleMapsApiKey","zoom","map","office","location","position","onClick","id","onCloseClick","name","city","state","zipCode","availableSlots","length","slot","index","margin","padding","cursor","backgroundColor","border","borderRadius","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\n\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"600px\",\n};\n\nconst center = {\n  lat: 40.7128, // Default to New York\n  lng: -74.006,\n};\n\nconst PublicMapView = () => {\n  const [offices, setOffices] = useState([]);\n  const [selectedOffice, setSelectedOffice] = useState(null);\n  const [bookingStatus, setBookingStatus] = useState(null);\n\n  useEffect(() => {\n    fetchOffices();\n  }, []);\n\n  const fetchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n    } catch (error) {\n      console.error(\"Error fetching offices:\", error);\n    }\n  };\n\n  const handleBooking = async (officeId, timeSlot) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/book-slot\", {\n        officeId,\n        timeSlot,\n      });\n\n      if (response.data.success) {\n        setBookingStatus(`Successfully booked ${timeSlot}!`);\n        fetchOffices(); // Refresh availability after booking\n      } else {\n        setBookingStatus(\"Booking failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error booking slot:\", error);\n      setBookingStatus(\"Booking failed. Try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Find a Dental Office</h2>\n      {bookingStatus && <p style={{ color: \"green\" }}>{bookingStatus}</p>}\n\n      <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\">\n        <GoogleMap mapContainerStyle={mapContainerStyle} center={center} zoom={12}>\n          {offices.map((office) =>\n            office.location ? (\n              <Marker\n                key={office.id}\n                position={office.location}\n                onClick={() => setSelectedOffice(office)}\n              />\n            ) : null\n          )}\n\n          {selectedOffice && (\n            <InfoWindow\n              position={selectedOffice.location}\n              onCloseClick={() => setSelectedOffice(null)}\n            >\n              <div>\n                <h3>{selectedOffice.name}</h3>\n                <p>Location: {selectedOffice.city}, {selectedOffice.state}, {selectedOffice.zipCode}</p>\n\n                <h4>Available Slots:</h4>\n                {selectedOffice.availableSlots.length > 0 ? (\n                  selectedOffice.availableSlots.map((slot, index) => (\n                    <button\n                      key={index}\n                      onClick={() => handleBooking(selectedOffice.id, slot)}\n                      style={{\n                        margin: \"5px\",\n                        padding: \"10px\",\n                        cursor: \"pointer\",\n                        backgroundColor: \"#28a745\",\n                        color: \"white\",\n                        border: \"none\",\n                        borderRadius: \"5px\",\n                      }}\n                    >\n                      {slot}\n                    </button>\n                  ))\n                ) : (\n                  <p>No slots available</p>\n                )}\n              </div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default PublicMapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}