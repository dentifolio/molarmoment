{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableHours = [\"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\"];\nconst OfficeDashboard = () => {\n  _s();\n  const [officeData, setOfficeData] = useState({\n    email: '',\n    password: ''\n  });\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [officeInfo, setOfficeInfo] = useState(null);\n  const handleInputChange = e => {\n    setOfficeData({\n      ...officeData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"Attempting login for:\", officeData.email);\n      const response = await axios.post('http://localhost:5000/login-office', officeData);\n      setIsLoggedIn(true);\n      setOfficeInfo(response.data);\n      setSelectedSlots(response.data.availableSlots || []);\n      setMessage('Login successful!');\n      console.log(\"Login successful for:\", response.data);\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setMessage('Invalid credentials. Try again.');\n    }\n  };\n  const toggleSlot = slot => {\n    setSelectedSlots(prevSlots => {\n      const updatedSlots = prevSlots.includes(slot) ? prevSlots.filter(s => s !== slot) // Remove slot\n      : [...prevSlots, slot]; // Add slot\n\n      console.log(\"Toggled slot:\", slot, \"Updated slots:\", updatedSlots);\n      return updatedSlots;\n    });\n  };\n  const handleUpdateAvailability = async () => {\n    try {\n      console.log(\"🚀 Sending updated availability to backend...\");\n      console.log(\"📩 Email:\", officeData.email);\n      console.log(\"🕒 Selected Slots:\", selectedSlots);\n      const response = await axios.post('http://localhost:5000/update-availability', {\n        email: officeData.email,\n        availableSlots: selectedSlots\n      });\n      console.log(\"✅ Availability updated successfully:\", response.data);\n      setMessage('Availability updated successfully!');\n    } catch (error) {\n      console.error('❌ Error updating availability:', error);\n      setMessage('Failed to update availability. Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dental Office Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: officeData.email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: officeData.password,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Welcome, \", officeInfo === null || officeInfo === void 0 ? void 0 : officeInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", officeInfo === null || officeInfo === void 0 ? void 0 : officeInfo.city, \", \", officeInfo === null || officeInfo === void 0 ? void 0 : officeInfo.state, \", \", officeInfo === null || officeInfo === void 0 ? void 0 : officeInfo.zipCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Available Hours for Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: availableHours.map(hour => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleSlot(hour),\n          style: {\n            margin: '5px',\n            backgroundColor: selectedSlots.includes(hour) ? 'green' : 'gray',\n            color: 'white',\n            padding: '10px',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: hour\n        }, hour, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateAvailability,\n        style: {\n          marginTop: '10px',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Update Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(OfficeDashboard, \"tibnHBW0Lmi+cdMYIOaeqJ1pCxE=\");\n_c = OfficeDashboard;\nexport default OfficeDashboard;\nvar _c;\n$RefreshReg$(_c, \"OfficeDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","availableHours","OfficeDashboard","_s","officeData","setOfficeData","email","password","selectedSlots","setSelectedSlots","message","setMessage","isLoggedIn","setIsLoggedIn","officeInfo","setOfficeInfo","handleInputChange","e","target","name","value","handleLogin","preventDefault","console","log","response","post","data","availableSlots","error","toggleSlot","slot","prevSlots","updatedSlots","includes","filter","s","handleUpdateAvailability","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","city","state","zipCode","map","hour","onClick","style","margin","backgroundColor","color","padding","border","cursor","marginTop","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst availableHours = [\n  \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\",\n  \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\"\n];\n\nconst OfficeDashboard = () => {\n  const [officeData, setOfficeData] = useState({ email: '', password: '' });\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [officeInfo, setOfficeInfo] = useState(null);\n\n  const handleInputChange = (e) => {\n    setOfficeData({ ...officeData, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      console.log(\"Attempting login for:\", officeData.email);\n      const response = await axios.post('http://localhost:5000/login-office', officeData);\n      setIsLoggedIn(true);\n      setOfficeInfo(response.data);\n      setSelectedSlots(response.data.availableSlots || []);\n      setMessage('Login successful!');\n      console.log(\"Login successful for:\", response.data);\n    } catch (error) {\n      console.error('Error logging in:', error);\n      setMessage('Invalid credentials. Try again.');\n    }\n  };\n\n  const toggleSlot = (slot) => {\n    setSelectedSlots(prevSlots => {\n      const updatedSlots = prevSlots.includes(slot)\n        ? prevSlots.filter(s => s !== slot)  // Remove slot\n        : [...prevSlots, slot];  // Add slot\n\n      console.log(\"Toggled slot:\", slot, \"Updated slots:\", updatedSlots);\n      return updatedSlots;\n    });\n  };\n\n  const handleUpdateAvailability = async () => {\n    try {\n      console.log(\"🚀 Sending updated availability to backend...\");\n      console.log(\"📩 Email:\", officeData.email);\n      console.log(\"🕒 Selected Slots:\", selectedSlots);\n\n      const response = await axios.post('http://localhost:5000/update-availability', {\n        email: officeData.email,\n        availableSlots: selectedSlots,\n      });\n\n      console.log(\"✅ Availability updated successfully:\", response.data);\n      setMessage('Availability updated successfully!');\n    } catch (error) {\n      console.error('❌ Error updating availability:', error);\n      setMessage('Failed to update availability. Try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Dental Office Dashboard</h2>\n      {!isLoggedIn ? (\n        <form onSubmit={handleLogin}>\n          <input type=\"email\" name=\"email\" placeholder=\"Email\" value={officeData.email} onChange={handleInputChange} required />\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" value={officeData.password} onChange={handleInputChange} required />\n          <button type=\"submit\">Login</button>\n        </form>\n      ) : (\n        <div>\n          <h3>Welcome, {officeInfo?.name}</h3>\n          <p>Location: {officeInfo?.city}, {officeInfo?.state}, {officeInfo?.zipCode}</p>\n          <h3>Select Available Hours for Today</h3>\n          <div>\n            {availableHours.map(hour => (\n              <button\n                key={hour}\n                onClick={() => toggleSlot(hour)}\n                style={{\n                  margin: '5px',\n                  backgroundColor: selectedSlots.includes(hour) ? 'green' : 'gray',\n                  color: 'white',\n                  padding: '10px',\n                  border: 'none',\n                  cursor: 'pointer'\n                }}\n              >\n                {hour}\n              </button>\n            ))}\n          </div>\n\n          {/* ✅ Ensure the \"Update Availability\" button appears after toggling slots */}\n          <button\n            onClick={handleUpdateAvailability}\n            style={{\n              marginTop: '10px',\n              padding: '10px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              cursor: 'pointer'\n            }}\n          >\n            Update Availability\n          </button>\n\n        </div>\n      )}\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default OfficeDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}