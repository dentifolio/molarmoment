{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfficeDashboard = ({\n  office\n}) => {\n  _s();\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (office) {\n      fetchAvailability();\n    }\n  }, [office]);\n\n  // Fetch available slots from backend\n  const fetchAvailability = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/get-availability/${office.id}`);\n      console.log(\"Fetched availability:\", response.data);\n      setAvailableSlots(response.data.availableSlots || []);\n    } catch (err) {\n      console.error(\"Error fetching availability:\", err);\n      setError(\"Failed to fetch availability.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle availability for a time slot\n  const toggleSlot = slot => {\n    setAvailableSlots(prevSlots => prevSlots.includes(slot) ? prevSlots.filter(s => s !== slot) // Remove slot if it exists\n    : [...prevSlots, slot] // Add slot if it's not there\n    );\n  };\n\n  // Send updated availability to the backend\n  const updateAvailability = async () => {\n    try {\n      console.log(\"ðŸš€ Sending updated availability to backend...\", availableSlots);\n      await axios.post(\"http://localhost:5000/update-availability\", {\n        officeId: office.id,\n        availableSlots\n      });\n      alert(\"Availability updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating availability:\", error);\n      alert(\"Failed to update availability.\");\n    }\n  };\n  if (!office) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading office data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dental Office Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", office.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", office.city, \", \", office.state, \", \", office.zipCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Available Hours for Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading slots...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\"].map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleSlot(slot),\n        style: {\n          margin: \"5px\",\n          padding: \"10px\",\n          backgroundColor: availableSlots.includes(slot) ? \"green\" : \"gray\",\n          color: \"white\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateAvailability,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\",\n        backgroundColor: \"blue\",\n        color: \"white\"\n      },\n      children: \"Update Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(OfficeDashboard, \"FW6/VZuOOpFrLVOYiNERMHx7YgI=\");\n_c = OfficeDashboard;\nexport default OfficeDashboard;\nvar _c;\n$RefreshReg$(_c, \"OfficeDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OfficeDashboard","office","_s","availableSlots","setAvailableSlots","loading","setLoading","error","setError","fetchAvailability","response","get","id","console","log","data","err","toggleSlot","slot","prevSlots","includes","filter","s","updateAvailability","post","officeId","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","name","city","state","zipCode","map","onClick","style","margin","padding","backgroundColor","color","border","cursor","marginTop","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst OfficeDashboard = ({ office }) => {\n    const [availableSlots, setAvailableSlots] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (office) {\n            fetchAvailability();\n        }\n    }, [office]);\n\n    // Fetch available slots from backend\n    const fetchAvailability = async () => {\n        try {\n            const response = await axios.get(`http://localhost:5000/get-availability/${office.id}`);\n            console.log(\"Fetched availability:\", response.data);\n            setAvailableSlots(response.data.availableSlots || []);\n        } catch (err) {\n            console.error(\"Error fetching availability:\", err);\n            setError(\"Failed to fetch availability.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Toggle availability for a time slot\n    const toggleSlot = (slot) => {\n        setAvailableSlots((prevSlots) =>\n            prevSlots.includes(slot)\n                ? prevSlots.filter((s) => s !== slot) // Remove slot if it exists\n                : [...prevSlots, slot] // Add slot if it's not there\n        );\n    };\n\n    // Send updated availability to the backend\n    const updateAvailability = async () => {\n        try {\n            console.log(\"ðŸš€ Sending updated availability to backend...\", availableSlots);\n            await axios.post(\"http://localhost:5000/update-availability\", {\n                officeId: office.id,\n                availableSlots,\n            });\n            alert(\"Availability updated successfully!\");\n        } catch (error) {\n            console.error(\"Error updating availability:\", error);\n            alert(\"Failed to update availability.\");\n        }\n    };\n\n    if (!office) {\n        return <p>Loading office data...</p>;\n    }\n\n    return (\n        <div>\n            <h2>Dental Office Dashboard</h2>\n            <h3>Welcome, {office.name}</h3>\n            <p>Location: {office.city}, {office.state}, {office.zipCode}</p>\n\n            <h3>Select Available Hours for Today</h3>\n            {loading ? (\n                <p>Loading slots...</p>\n            ) : (\n                <div>\n                    {[\n                        \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\",\n                        \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\",\n                        \"4:00 PM\", \"5:00 PM\", \"6:00 PM\"\n                    ].map((slot) => (\n                        <button\n                            key={slot}\n                            onClick={() => toggleSlot(slot)}\n                            style={{\n                                margin: \"5px\",\n                                padding: \"10px\",\n                                backgroundColor: availableSlots.includes(slot) ? \"green\" : \"gray\",\n                                color: \"white\",\n                                border: \"none\",\n                                cursor: \"pointer\",\n                            }}\n                        >\n                            {slot}\n                        </button>\n                    ))}\n                </div>\n            )}\n\n            <br />\n            <button onClick={updateAvailability} style={{ marginTop: \"10px\", padding: \"10px\", backgroundColor: \"blue\", color: \"white\" }}>\n                Update Availability\n            </button>\n        </div>\n    );\n};\n\nexport default OfficeDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}