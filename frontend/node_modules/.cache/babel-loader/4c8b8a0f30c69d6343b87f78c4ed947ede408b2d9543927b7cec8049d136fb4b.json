{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{BrowserRouter as Router,Routes,Route,Navigate}from\"react-router-dom\";import PublicMapView from\"./PublicMapView\";import OfficeDashboard from\"./OfficeDashboard\";import Login from\"./Login\";import Signup from\"./Signup\";import Navbar from\"./Navbar\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const[user,setUser]=useState(null);useEffect(()=>{const storedUser=localStorage.getItem(\"user\");if(storedUser){setIsLoggedIn(true);setUser(JSON.parse(storedUser));}},[]);const handleLogin=userData=>{localStorage.setItem(\"user\",JSON.stringify(userData));setIsLoggedIn(true);setUser(userData);};const handleLogout=()=>{localStorage.removeItem(\"user\");setIsLoggedIn(false);setUser(null);};return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{isLoggedIn:isLoggedIn,handleLogout:handleLogout}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:isLoggedIn?/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"}):/*#__PURE__*/_jsx(PublicMapView,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isLoggedIn?/*#__PURE__*/_jsx(OfficeDashboard,{user:user}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(Signup,{})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","PublicMapView","OfficeDashboard","Login","Signup","Navbar","jsx","_jsx","jsxs","_jsxs","App","isLoggedIn","setIsLoggedIn","user","setUser","storedUser","localStorage","getItem","JSON","parse","handleLogin","userData","setItem","stringify","handleLogout","removeItem","children","path","element","to","onLogin"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport PublicMapView from \"./PublicMapView\";\nimport OfficeDashboard from \"./OfficeDashboard\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Navbar from \"./Navbar\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setIsLoggedIn(true);\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const handleLogin = (userData) => {\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n    setIsLoggedIn(true);\n    setUser(userData);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n\n  return (\n    <Router>\n      <Navbar isLoggedIn={isLoggedIn} handleLogout={handleLogout} />\n      <Routes>\n        {/* âœ… Redirect offices to dashboard if logged in */}\n        <Route path=\"/\" element={isLoggedIn ? <Navigate to=\"/dashboard\" /> : <PublicMapView />} />\n        <Route path=\"/dashboard\" element={isLoggedIn ? <OfficeDashboard user={user} /> : <Navigate to=\"/login\" />} />\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n        <Route path=\"/signup\" element={<Signup />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACmB,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACdH,aAAa,CAAC,IAAI,CAAC,CACnBE,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,WAAW,CAAIC,QAAQ,EAAK,CAChCL,YAAY,CAACM,OAAO,CAAC,MAAM,CAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC,CACtDT,aAAa,CAAC,IAAI,CAAC,CACnBE,OAAO,CAACO,QAAQ,CAAC,CACnB,CAAC,CAED,KAAM,CAAAG,YAAY,CAAGA,CAAA,GAAM,CACzBR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CAC/Bb,aAAa,CAAC,KAAK,CAAC,CACpBE,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEL,KAAA,CAACZ,MAAM,EAAA6B,QAAA,eACLnB,IAAA,CAACF,MAAM,EAACM,UAAU,CAAEA,UAAW,CAACa,YAAY,CAAEA,YAAa,CAAE,CAAC,cAC9Df,KAAA,CAACX,MAAM,EAAA4B,QAAA,eAELnB,IAAA,CAACR,KAAK,EAAC4B,IAAI,CAAC,GAAG,CAACC,OAAO,CAAEjB,UAAU,cAAGJ,IAAA,CAACP,QAAQ,EAAC6B,EAAE,CAAC,YAAY,CAAE,CAAC,cAAGtB,IAAA,CAACN,aAAa,GAAE,CAAE,CAAE,CAAC,cAC1FM,IAAA,CAACR,KAAK,EAAC4B,IAAI,CAAC,YAAY,CAACC,OAAO,CAAEjB,UAAU,cAAGJ,IAAA,CAACL,eAAe,EAACW,IAAI,CAAEA,IAAK,CAAE,CAAC,cAAGN,IAAA,CAACP,QAAQ,EAAC6B,EAAE,CAAC,QAAQ,CAAE,CAAE,CAAE,CAAC,cAC7GtB,IAAA,CAACR,KAAK,EAAC4B,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAErB,IAAA,CAACJ,KAAK,EAAC2B,OAAO,CAAEV,WAAY,CAAE,CAAE,CAAE,CAAC,cACjEb,IAAA,CAACR,KAAK,EAAC4B,IAAI,CAAC,SAAS,CAACC,OAAO,cAAErB,IAAA,CAACH,MAAM,GAAE,CAAE,CAAE,CAAC,EACvC,CAAC,EACH,CAAC,CAEb,CAEA,cAAe,CAAAM,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}