{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\"\n};\nconst defaultCenter = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst PublicMapView = ({\n  loggedInOffice,\n  navigateToDashboard\n}) => {\n  _s();\n  const [offices, setOffices] = useState([]);\n  const [selectedOffice, setSelectedOffice] = useState(null);\n  useEffect(() => {\n    fetchActiveOffices();\n    const interval = setInterval(fetchActiveOffices, 3000); // Auto-refresh every 3 sec\n    return () => clearInterval(interval);\n  }, []);\n  const fetchActiveOffices = async () => {\n    console.log(\"🔄 Fetching updated active offices...\");\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n      console.log(\"📍 Active Offices Fetched:\", response.data);\n    } catch (error) {\n      console.error(\"Error fetching active offices:\", error);\n    }\n  };\n  const handleMarkerClick = office => {\n    setSelectedOffice(office);\n  };\n  const handleCloseInfoWindow = () => {\n    setSelectedOffice(null);\n  };\n  const bookAppointment = async (office, slot) => {\n    try {\n      await axios.post(\"http://localhost:5000/book-appointment\", {\n        officeId: office.id,\n        slot\n      });\n      alert(`✅ Appointment booked at ${office.name} for ${slot}`);\n      fetchActiveOffices(); // Refresh availability after booking\n    } catch (error) {\n      console.error(\"Error booking appointment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#007bff\"\n      },\n      children: \"Live Dental Office Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loggedInOffice && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: navigateToDashboard,\n      style: {\n        backgroundColor: \"#007bff\",\n        color: \"white\",\n        padding: \"10px\",\n        marginBottom: \"10px\",\n        border: \"none\",\n        cursor: \"pointer\",\n        borderRadius: \"5px\"\n      },\n      children: \"Go to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDGBHVURcrUdjYNhCDNjFBWawsv612pQU0\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: defaultCenter,\n        zoom: 12,\n        children: [offices.map(office => {\n          if (!office.location) {\n            console.warn(\"⚠️ Skipping office with missing location:\", office);\n            return null;\n          }\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: office.location,\n            onClick: () => handleMarkerClick(office)\n          }, office.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        }), selectedOffice && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: selectedOffice.location,\n          onCloseClick: handleCloseInfoWindow,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedOffice.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), \" \", selectedOffice.city, \", \", selectedOffice.state, \", \", selectedOffice.zipCode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Time Slots:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: selectedOffice.availableSlots.length > 0 ? selectedOffice.availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [slot, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => bookAppointment(selectedOffice, slot),\n                  children: \"Book\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"No available slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicMapView, \"65A3b2+X2KaquF3wFDr6JCHAi/Y=\");\n_c = PublicMapView;\nexport default PublicMapView;\nvar _c;\n$RefreshReg$(_c, \"PublicMapView\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","InfoWindow","axios","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","PublicMapView","loggedInOffice","navigateToDashboard","_s","offices","setOffices","selectedOffice","setSelectedOffice","fetchActiveOffices","interval","setInterval","clearInterval","console","log","response","get","data","error","handleMarkerClick","office","handleCloseInfoWindow","bookAppointment","slot","post","officeId","id","alert","name","style","textAlign","padding","children","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","marginBottom","border","cursor","borderRadius","googleMapsApiKey","mapContainerStyle","center","zoom","map","location","warn","position","onCloseClick","city","state","zipCode","availableSlots","length","index","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport axios from \"axios\";\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\",\n};\n\nconst defaultCenter = {\n  lat: 40.7128,\n  lng: -74.0060,\n};\n\nconst PublicMapView = ({ loggedInOffice, navigateToDashboard }) => {\n  const [offices, setOffices] = useState([]);\n  const [selectedOffice, setSelectedOffice] = useState(null);\n\n  useEffect(() => {\n    fetchActiveOffices();\n    const interval = setInterval(fetchActiveOffices, 3000); // Auto-refresh every 3 sec\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchActiveOffices = async () => {\n    console.log(\"🔄 Fetching updated active offices...\");\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n      console.log(\"📍 Active Offices Fetched:\", response.data);\n    } catch (error) {\n      console.error(\"Error fetching active offices:\", error);\n    }\n  };\n\n  const handleMarkerClick = (office) => {\n    setSelectedOffice(office);\n  };\n\n  const handleCloseInfoWindow = () => {\n    setSelectedOffice(null);\n  };\n\n  const bookAppointment = async (office, slot) => {\n    try {\n      await axios.post(\"http://localhost:5000/book-appointment\", {\n        officeId: office.id,\n        slot,\n      });\n      alert(`✅ Appointment booked at ${office.name} for ${slot}`);\n      fetchActiveOffices(); // Refresh availability after booking\n    } catch (error) {\n      console.error(\"Error booking appointment:\", error);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h1 style={{ color: \"#007bff\" }}>Live Dental Office Availability</h1>\n\n      {loggedInOffice && (\n        <button\n          onClick={navigateToDashboard}\n          style={{\n            backgroundColor: \"#007bff\",\n            color: \"white\",\n            padding: \"10px\",\n            marginBottom: \"10px\",\n            border: \"none\",\n            cursor: \"pointer\",\n            borderRadius: \"5px\",\n          }}\n        >\n          Go to Dashboard\n        </button>\n      )}\n\n      <LoadScript googleMapsApiKey=\"AIzaSyDGBHVURcrUdjYNhCDNjFBWawsv612pQU0\">\n        <GoogleMap mapContainerStyle={containerStyle} center={defaultCenter} zoom={12}>\n          {offices.map((office) => {\n            if (!office.location) {\n              console.warn(\"⚠️ Skipping office with missing location:\", office);\n              return null;\n            }\n            return (\n              <Marker key={office.id} position={office.location} onClick={() => handleMarkerClick(office)} />\n            );\n          })}\n\n          {selectedOffice && (\n            <InfoWindow position={selectedOffice.location} onCloseClick={handleCloseInfoWindow}>\n              <div>\n                <h2>{selectedOffice.name}</h2>\n                <p>\n                  <strong>Location:</strong> {selectedOffice.city}, {selectedOffice.state}, {selectedOffice.zipCode}\n                </p>\n                <h3>Available Time Slots:</h3>\n                <ul>\n                  {selectedOffice.availableSlots.length > 0 ? (\n                    selectedOffice.availableSlots.map((slot, index) => (\n                      <li key={index}>\n                        {slot}{\" \"}\n                        <button onClick={() => bookAppointment(selectedOffice, slot)}>\n                          Book\n                        </button>\n                      </li>\n                    ))\n                  ) : (\n                    <li>No available slots</li>\n                  )}\n                </ul>\n              </div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default PublicMapView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAQ,wBAAwB;AAClF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACduB,kBAAkB,CAAC,CAAC;IACpB,MAAMC,QAAQ,GAAGC,WAAW,CAACF,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC;IACxD,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCI,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,sCAAsC,CAAC;MACxEV,UAAU,CAACS,QAAQ,CAACE,IAAI,CAAC;MACzBJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IACpCZ,iBAAiB,CAACY,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCb,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMc,eAAe,GAAG,MAAAA,CAAOF,MAAM,EAAEG,IAAI,KAAK;IAC9C,IAAI;MACF,MAAM/B,KAAK,CAACgC,IAAI,CAAC,wCAAwC,EAAE;QACzDC,QAAQ,EAAEL,MAAM,CAACM,EAAE;QACnBH;MACF,CAAC,CAAC;MACFI,KAAK,CAAC,2BAA2BP,MAAM,CAACQ,IAAI,QAAQL,IAAI,EAAE,CAAC;MAC3Dd,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACExB,OAAA;IAAKmC,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDtC,OAAA;MAAImC,KAAK,EAAE;QAAEI,KAAK,EAAE;MAAU,CAAE;MAAAD,QAAA,EAAC;IAA+B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpEnC,cAAc,iBACbR,OAAA;MACE4C,OAAO,EAAEnC,mBAAoB;MAC7B0B,KAAK,EAAE;QACLU,eAAe,EAAE,SAAS;QAC1BN,KAAK,EAAE,OAAO;QACdF,OAAO,EAAE,MAAM;QACfS,YAAY,EAAE,MAAM;QACpBC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE,SAAS;QACjBC,YAAY,EAAE;MAChB,CAAE;MAAAX,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,eAED3C,OAAA,CAACL,UAAU;MAACuD,gBAAgB,EAAC,yCAAyC;MAAAZ,QAAA,eACpEtC,OAAA,CAACN,SAAS;QAACyD,iBAAiB,EAAElD,cAAe;QAACmD,MAAM,EAAEhD,aAAc;QAACiD,IAAI,EAAE,EAAG;QAAAf,QAAA,GAC3E3B,OAAO,CAAC2C,GAAG,CAAE5B,MAAM,IAAK;UACvB,IAAI,CAACA,MAAM,CAAC6B,QAAQ,EAAE;YACpBpC,OAAO,CAACqC,IAAI,CAAC,2CAA2C,EAAE9B,MAAM,CAAC;YACjE,OAAO,IAAI;UACb;UACA,oBACE1B,OAAA,CAACJ,MAAM;YAAiB6D,QAAQ,EAAE/B,MAAM,CAAC6B,QAAS;YAACX,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACC,MAAM;UAAE,GAA/EA,MAAM,CAACM,EAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwE,CAAC;QAEnG,CAAC,CAAC,EAED9B,cAAc,iBACbb,OAAA,CAACH,UAAU;UAAC4D,QAAQ,EAAE5C,cAAc,CAAC0C,QAAS;UAACG,YAAY,EAAE/B,qBAAsB;UAAAW,QAAA,eACjFtC,OAAA;YAAAsC,QAAA,gBACEtC,OAAA;cAAAsC,QAAA,EAAKzB,cAAc,CAACqB;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9B3C,OAAA;cAAAsC,QAAA,gBACEtC,OAAA;gBAAAsC,QAAA,EAAQ;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC9B,cAAc,CAAC8C,IAAI,EAAC,IAAE,EAAC9C,cAAc,CAAC+C,KAAK,EAAC,IAAE,EAAC/C,cAAc,CAACgD,OAAO;YAAA;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChG,CAAC,eACJ3C,OAAA;cAAAsC,QAAA,EAAI;YAAqB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9B3C,OAAA;cAAAsC,QAAA,EACGzB,cAAc,CAACiD,cAAc,CAACC,MAAM,GAAG,CAAC,GACvClD,cAAc,CAACiD,cAAc,CAACR,GAAG,CAAC,CAACzB,IAAI,EAAEmC,KAAK,kBAC5ChE,OAAA;gBAAAsC,QAAA,GACGT,IAAI,EAAE,GAAG,eACV7B,OAAA;kBAAQ4C,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACf,cAAc,EAAEgB,IAAI,CAAE;kBAAAS,QAAA,EAAC;gBAE9D;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAJFqB,KAAK;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKV,CACL,CAAC,gBAEF3C,OAAA;gBAAAsC,QAAA,EAAI;cAAkB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAC3B;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACjC,EAAA,CAxGIH,aAAa;AAAA0D,EAAA,GAAb1D,aAAa;AA0GnB,eAAeA,aAAa;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}