{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicMapView = () => {\n  _s();\n  const [offices, setOffices] = useState([]);\n  const [bookingStatus, setBookingStatus] = useState(null);\n  useEffect(() => {\n    fetchOffices();\n  }, []);\n  const fetchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n    } catch (error) {\n      console.error(\"Error fetching offices:\", error);\n    }\n  };\n  const handleBooking = async (officeId, timeSlot) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/book-slot\", {\n        officeId,\n        timeSlot\n      });\n      if (response.data.success) {\n        setBookingStatus(`Successfully booked ${timeSlot}!`);\n        fetchOffices(); // Refresh availability after booking\n      } else {\n        setBookingStatus(\"Booking failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error booking slot:\", error);\n      setBookingStatus(\"Booking failed. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Dental Offices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), bookingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: bookingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this), offices.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading offices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : offices.map(office => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: office.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", office.city, \", \", office.state, \", \", office.zipCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Slots:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), office.availableSlots.length > 0 ? office.availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBooking(office.id, slot),\n        style: {\n          margin: \"5px\",\n          padding: \"10px\",\n          cursor: \"pointer\",\n          backgroundColor: \"#28a745\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\"\n        },\n        children: slot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No slots available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)]\n    }, office.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicMapView, \"GgFLpI+OUS3v9DAfKT1C3D8NPRk=\");\n_c = PublicMapView;\nexport default PublicMapView;\nvar _c;\n$RefreshReg$(_c, \"PublicMapView\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PublicMapView","_s","offices","setOffices","bookingStatus","setBookingStatus","fetchOffices","response","get","data","error","console","handleBooking","officeId","timeSlot","post","success","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","office","border","padding","marginBottom","name","city","state","zipCode","availableSlots","slot","index","onClick","id","margin","cursor","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PublicMapView = () => {\n  const [offices, setOffices] = useState([]);\n  const [bookingStatus, setBookingStatus] = useState(null);\n\n  useEffect(() => {\n    fetchOffices();\n  }, []);\n\n  const fetchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n    } catch (error) {\n      console.error(\"Error fetching offices:\", error);\n    }\n  };\n\n  const handleBooking = async (officeId, timeSlot) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/book-slot\", {\n        officeId,\n        timeSlot,\n      });\n\n      if (response.data.success) {\n        setBookingStatus(`Successfully booked ${timeSlot}!`);\n        fetchOffices(); // Refresh availability after booking\n      } else {\n        setBookingStatus(\"Booking failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error booking slot:\", error);\n      setBookingStatus(\"Booking failed. Try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Available Dental Offices</h2>\n      {bookingStatus && <p style={{ color: \"green\" }}>{bookingStatus}</p>}\n\n      {offices.length === 0 ? (\n        <p>Loading offices...</p>\n      ) : (\n        offices.map((office) => (\n          <div key={office.id} style={{ border: \"1px solid #ccc\", padding: \"10px\", marginBottom: \"10px\" }}>\n            <h3>{office.name}</h3>\n            <p>Location: {office.city}, {office.state}, {office.zipCode}</p>\n\n            <h4>Available Slots:</h4>\n            {office.availableSlots.length > 0 ? (\n              office.availableSlots.map((slot, index) => (\n                <button\n                  key={index}\n                  onClick={() => handleBooking(office.id, slot)}\n                  style={{\n                    margin: \"5px\",\n                    padding: \"10px\",\n                    cursor: \"pointer\",\n                    backgroundColor: \"#28a745\",\n                    color: \"white\",\n                    border: \"none\",\n                    borderRadius: \"5px\"\n                  }}\n                >\n                  {slot}\n                </button>\n              ))\n            ) : (\n              <p>No slots available</p>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PublicMapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}