{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfficeDashboard = ({\n  user\n}) => {\n  _s();\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [newSlot, setNewSlot] = useState(\"\");\n  useEffect(() => {\n    if (user) {\n      fetchAvailability();\n    }\n  }, [user]);\n  const fetchAvailability = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      const office = response.data.find(o => o.email === user.email);\n      if (office) {\n        setAvailableSlots(office.availableSlots);\n      }\n    } catch (error) {\n      console.error(\"Error fetching availability:\", error);\n    }\n  };\n  const handleAddSlot = async () => {\n    if (!newSlot) return;\n    const updatedSlots = [...availableSlots, newSlot];\n    try {\n      await axios.post(\"http://localhost:5000/update-availability\", {\n        email: user.email,\n        availableSlots: updatedSlots\n      });\n      setAvailableSlots(updatedSlots);\n      setNewSlot(\"\");\n    } catch (error) {\n      console.error(\"Error updating availability:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Available Slots:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), availableSlots.length > 0 ? availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: slot\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 45\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No available slots yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Time Slot (e.g., 3:00 PM)\",\n      value: newSlot,\n      onChange: e => setNewSlot(e.target.value),\n      style: {\n        padding: \"10px\",\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSlot,\n      style: {\n        padding: \"10px\",\n        background: \"green\",\n        color: \"white\"\n      },\n      children: \"Add Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(OfficeDashboard, \"rwZyBnUQ7DD6kZDddvG2YekrrAY=\");\n_c = OfficeDashboard;\nexport default OfficeDashboard;\nvar _c;\n$RefreshReg$(_c, \"OfficeDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OfficeDashboard","user","_s","availableSlots","setAvailableSlots","newSlot","setNewSlot","fetchAvailability","response","get","office","data","find","o","email","error","console","handleAddSlot","updatedSlots","post","style","padding","children","name","fileName","_jsxFileName","lineNumber","columnNumber","length","map","slot","index","type","placeholder","value","onChange","e","target","marginRight","onClick","background","color","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/OfficeDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst OfficeDashboard = ({ user }) => {\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [newSlot, setNewSlot] = useState(\"\");\n\n  useEffect(() => {\n    if (user) {\n      fetchAvailability();\n    }\n  }, [user]);\n\n  const fetchAvailability = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      const office = response.data.find((o) => o.email === user.email);\n\n      if (office) {\n        setAvailableSlots(office.availableSlots);\n      }\n    } catch (error) {\n      console.error(\"Error fetching availability:\", error);\n    }\n  };\n\n  const handleAddSlot = async () => {\n    if (!newSlot) return;\n\n    const updatedSlots = [...availableSlots, newSlot];\n\n    try {\n      await axios.post(\"http://localhost:5000/update-availability\", {\n        email: user.email,\n        availableSlots: updatedSlots,\n      });\n\n      setAvailableSlots(updatedSlots);\n      setNewSlot(\"\");\n    } catch (error) {\n      console.error(\"Error updating availability:\", error);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Welcome, {user.name}</h2>\n      <h3>Your Available Slots:</h3>\n      {availableSlots.length > 0 ? (\n        availableSlots.map((slot, index) => <p key={index}>{slot}</p>)\n      ) : (\n        <p>No available slots yet.</p>\n      )}\n\n      <input\n        type=\"text\"\n        placeholder=\"Add Time Slot (e.g., 3:00 PM)\"\n        value={newSlot}\n        onChange={(e) => setNewSlot(e.target.value)}\n        style={{ padding: \"10px\", marginRight: \"10px\" }}\n      />\n      <button onClick={handleAddSlot} style={{ padding: \"10px\", background: \"green\", color: \"white\" }}>\n        Add Slot\n      </button>\n    </div>\n  );\n};\n\nexport default OfficeDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}