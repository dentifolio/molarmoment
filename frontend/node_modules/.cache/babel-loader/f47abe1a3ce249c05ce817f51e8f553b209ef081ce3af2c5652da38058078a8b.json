{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst sidebarStyle = {\n  width: \"30%\",\n  maxWidth: \"400px\",\n  minWidth: \"300px\",\n  padding: \"20px\",\n  overflowY: \"auto\",\n  backgroundColor: \"#f8f9fa\",\n  borderRight: \"2px solid #ddd\"\n};\nconst mapStyle = {\n  flex: 1,\n  height: \"100%\"\n};\nconst PublicMapView = () => {\n  _s();\n  const [offices, setOffices] = useState([]);\n  const [selectedOffice, setSelectedOffice] = useState(null);\n  const [zipCode, setZipCode] = useState(\"\");\n  const [radius, setRadius] = useState(5);\n  const [center, setCenter] = useState({\n    lat: 40.7128,\n    lng: -74.0060\n  }); // Default: NYC\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    fetchOffices();\n  }, []);\n  const fetchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n    } catch (error) {\n      console.error(\"Error fetching offices:\", error);\n    }\n  };\n  const searchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/search-offices\", {\n        params: {\n          zipCode,\n          radius\n        }\n      });\n      if (response.data.length > 0) {\n        setOffices(response.data);\n        // Center map on first office result\n        setCenter({\n          lat: response.data[0].location.lat,\n          lng: response.data[0].location.lng\n        });\n      } else {\n        alert(\"No offices found in this area.\");\n      }\n    } catch (error) {\n      console.error(\"Error searching offices:\", error);\n    }\n  };\n  const handleBooking = async (officeId, timeSlot) => {\n    const patientName = prompt(\"Enter your full name:\");\n    if (!patientName) return alert(\"Booking canceled.\");\n    const patientEmail = prompt(\"Enter your email:\");\n    if (!patientEmail) return alert(\"Booking canceled.\");\n    const patientPhone = prompt(\"Enter your phone number:\");\n    if (!patientPhone) return alert(\"Booking canceled.\");\n\n    // Reason selection\n    const reasonOptions = [\"New Patient Exam\", \"Emergency\", \"Routine Check-up\", \"Cleaning\", \"Other\"];\n    const reason = prompt(`Select reason:\\n${reasonOptions.map((r, i) => `${i + 1}. ${r}`).join(\"\\n\")}`);\n    const selectedReason = reasonOptions[parseInt(reason) - 1] || \"Other\";\n\n    // Payment method\n    const paymentOptions = [\"Insurance\", \"Cash\"];\n    const payment = prompt(`Select payment method:\\n1. Insurance\\n2. Cash`);\n    const selectedPayment = paymentOptions[parseInt(payment) - 1] || \"Insurance\";\n    try {\n      const response = await axios.post(\"http://localhost:5000/book-slot\", {\n        officeId,\n        timeSlot,\n        patientName,\n        patientEmail,\n        patientPhone,\n        reason: selectedReason,\n        paymentMethod: selectedPayment\n      });\n      if (response.data.success) {\n        alert(`✅ Successfully booked ${timeSlot} for ${patientName}!\\nReason: ${selectedReason}\\nPayment: ${selectedPayment}`);\n        fetchOffices(); // Refresh available slots\n      } else {\n        alert(\"⚠️ Booking failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error booking slot:\", error);\n      alert(\"⚠️ Booking failed. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: sidebarStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/banner.jpg\",\n        alt: \"Find a Dentist\",\n        style: {\n          width: \"100%\",\n          marginBottom: \"10px\",\n          marginTop: \"30px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Find an available Dentist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your ZIP code and select a search radius to find nearby available dentists with open slots.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on an available time slot to book an appointment instantly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter ZIP Code\",\n        value: zipCode,\n        onChange: e => setZipCode(e.target.value),\n        style: {\n          width: \"40%\",\n          padding: \"8px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: radius,\n        onChange: e => setRadius(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"1 Mile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"5 Miles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10 Miles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchOffices,\n        style: {\n          width: \"100%\",\n          marginTop: \"10px\",\n          padding: \"10px\",\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\"\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Offices:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), offices.length > 0 ? offices.map(office => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          borderBottom: \"1px solid #ddd\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: office.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: office.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [office.city, \", \", office.state, \" \", office.zipCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 18\n          }, this), \" \", office.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 18\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `mailto:${office.email}`,\n            children: office.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), office.website && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Website:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 20\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: office.website,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: office.website\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Available Slots:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), office.availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBooking(office.id, slot),\n          disabled: bookingStatus !== null,\n          style: {\n            margin: \"5px\",\n            padding: \"8px\",\n            backgroundColor: bookingStatus ? \"gray\" : \"#28a745\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: bookingStatus ? \"not-allowed\" : \"pointer\"\n          },\n          children: slot\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this))]\n      }, office.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No offices found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: mapStyle,\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"AIzaSyDGBHVURcrUdjYNhCDNjFBWawsv612pQU0\\n\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          center: {\n            lat: 40.7128,\n            lng: -74.006\n          },\n          zoom: 12,\n          children: [offices.map(office => office.location ? /*#__PURE__*/_jsxDEV(Marker, {\n            position: office.location,\n            onClick: () => setSelectedOffice(office)\n          }, office.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this) : null), selectedOffice && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: selectedOffice.location,\n            onCloseClick: () => setSelectedOffice(null),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: selectedOffice.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selectedOffice.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [selectedOffice.city, \", \", selectedOffice.state, \", \", selectedOffice.zipCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 22\n                }, this), \" \", selectedOffice.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 22\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `mailto:${selectedOffice.email}`,\n                  children: selectedOffice.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), selectedOffice.website && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Website:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 24\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: selectedOffice.website,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: selectedOffice.website\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Available Slots:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), selectedOffice.availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleBooking(selectedOffice.id, slot),\n                style: {\n                  margin: \"5px\",\n                  padding: \"10px\",\n                  backgroundColor: \"#28a745\",\n                  color: \"white\",\n                  border: \"none\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\"\n                },\n                children: slot\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicMapView, \"/IDKnbRtSM4qXRIWMC9AZQ57MkY=\");\n_c = PublicMapView;\nexport default PublicMapView;\nvar _c;\n$RefreshReg$(_c, \"PublicMapView\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","containerStyle","display","flexDirection","height","width","sidebarStyle","maxWidth","minWidth","padding","overflowY","backgroundColor","borderRight","mapStyle","flex","PublicMapView","_s","offices","setOffices","selectedOffice","setSelectedOffice","zipCode","setZipCode","radius","setRadius","center","setCenter","lat","lng","map","setMap","fetchOffices","response","get","data","error","console","searchOffices","params","length","location","alert","handleBooking","officeId","timeSlot","patientName","prompt","patientEmail","patientPhone","reasonOptions","reason","r","i","join","selectedReason","parseInt","paymentOptions","payment","selectedPayment","post","paymentMethod","success","style","children","src","alt","marginBottom","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","color","border","office","borderBottom","name","address","city","state","phone","href","email","website","rel","availableSlots","slot","index","id","disabled","bookingStatus","margin","borderRadius","cursor","googleMapsApiKey","mapContainerStyle","zoom","position","onCloseClick","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  height: \"100vh\",\n  width: \"100vw\",\n};\n\nconst sidebarStyle = {\n  width: \"30%\",\n  maxWidth: \"400px\",\n  minWidth: \"300px\",\n  padding: \"20px\",\n  overflowY: \"auto\",\n  backgroundColor: \"#f8f9fa\",\n  borderRight: \"2px solid #ddd\",\n};\n\nconst mapStyle = {\n  flex: 1,\n  height: \"100%\",\n};\n\nconst PublicMapView = () => {\n  const [offices, setOffices] = useState([]);\n  const [selectedOffice, setSelectedOffice] = useState(null);\n  const [zipCode, setZipCode] = useState(\"\");\n  const [radius, setRadius] = useState(5);\n  const [center, setCenter] = useState({ lat: 40.7128, lng: -74.0060 }); // Default: NYC\n  const [map, setMap] = useState(null);\n  \n  useEffect(() => {\n    fetchOffices();\n  }, []);\n\n  const fetchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/active-offices\");\n      setOffices(response.data);\n    } catch (error) {\n      console.error(\"Error fetching offices:\", error);\n    }\n  };\n\n  const searchOffices = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/search-offices\", {\n        params: { zipCode, radius },\n      });\n      if (response.data.length > 0) {\n            setOffices(response.data);\n            // Center map on first office result\n            setCenter({\n              lat: response.data[0].location.lat,\n              lng: response.data[0].location.lng,\n            });\n          } else {\n            alert(\"No offices found in this area.\");\n          }\n        } catch (error) {\n          console.error(\"Error searching offices:\", error);\n        }\n      };\n\n  const handleBooking = async (officeId, timeSlot) => {\n  const patientName = prompt(\"Enter your full name:\");\n  if (!patientName) return alert(\"Booking canceled.\");\n\n  const patientEmail = prompt(\"Enter your email:\");\n  if (!patientEmail) return alert(\"Booking canceled.\");\n\n  const patientPhone = prompt(\"Enter your phone number:\");\n  if (!patientPhone) return alert(\"Booking canceled.\");\n\n  // Reason selection\n  const reasonOptions = [\"New Patient Exam\", \"Emergency\", \"Routine Check-up\", \"Cleaning\", \"Other\"];\n  const reason = prompt(`Select reason:\\n${reasonOptions.map((r, i) => `${i + 1}. ${r}`).join(\"\\n\")}`);\n  const selectedReason = reasonOptions[parseInt(reason) - 1] || \"Other\";\n\n  // Payment method\n  const paymentOptions = [\"Insurance\", \"Cash\"];\n  const payment = prompt(`Select payment method:\\n1. Insurance\\n2. Cash`);\n  const selectedPayment = paymentOptions[parseInt(payment) - 1] || \"Insurance\";\n\n  try {\n    const response = await axios.post(\"http://localhost:5000/book-slot\", {\n      officeId,\n      timeSlot,\n      patientName,\n      patientEmail,\n      patientPhone,\n      reason: selectedReason,\n      paymentMethod: selectedPayment\n    });\n\n    if (response.data.success) {\n      alert(`✅ Successfully booked ${timeSlot} for ${patientName}!\\nReason: ${selectedReason}\\nPayment: ${selectedPayment}`);\n      fetchOffices(); // Refresh available slots\n    } else {\n      alert(\"⚠️ Booking failed. Try again.\");\n    }\n  } catch (error) {\n    console.error(\"Error booking slot:\", error);\n    alert(\"⚠️ Booking failed. Try again.\");\n  }\n};\n\n\n  return (\n    <div style={containerStyle}>\n      {/* Sidebar */}\n      <div style={sidebarStyle}>\n      <img src=\"/banner.jpg\" alt=\"Find a Dentist\" style={{ width: \"100%\", marginBottom: \"10px\", marginTop: \"30px\" }} />\n        <h2>Find an available Dentist</h2>\n        <p>Enter your ZIP code and select a search radius to find nearby available dentists with open slots.</p>\n        <p>Click on an available time slot to book an appointment instantly.</p>\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter ZIP Code\"\n          value={zipCode}\n          onChange={(e) => setZipCode(e.target.value)}\n          style={{ width: \"40%\", padding: \"8px\", marginBottom: \"10px\" }}\n        />\n        <select value={radius} onChange={(e) => setRadius(e.target.value)} style={{ width: \"100%\", padding: \"8px\" }}>\n          <option value={1}>1 Mile</option>\n          <option value={5}>5 Miles</option>\n          <option value={10}>10 Miles</option>\n        </select>\n        <button onClick={searchOffices} style={{ width: \"100%\", marginTop: \"10px\", padding: \"10px\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\" }}>\n          Search\n        </button>\n\n        <h4>Available Offices:</h4>\n        {offices.length > 0 ? (\n          offices.map((office) => (\n            <div key={office.id} style={{ padding: \"10px\", borderBottom: \"1px solid #ddd\" }}>\n              <strong>{office.name}</strong>\n              <p>{office.address}</p>\n              <p>{office.city}, {office.state} {office.zipCode}</p>\n              <p><strong>Phone:</strong> {office.phone}</p>\n              <p><strong>Email:</strong> <a href={`mailto:${office.email}`}>{office.email}</a></p>\n              {office.website && (\n                <p><strong>Website:</strong> <a href={office.website} target=\"_blank\" rel=\"noopener noreferrer\">{office.website}</a></p>\n              )}\n              <p><strong>Available Slots:</strong></p>\n              {office.availableSlots.map((slot, index) => (\n                <button\n                  key={index}\n                  onClick={() => handleBooking(office.id, slot)}\n                  disabled={bookingStatus !== null}\n                  style={{\n                    margin: \"5px\",\n                    padding: \"8px\",\n                    backgroundColor: bookingStatus ? \"gray\" : \"#28a745\",\n                    color: \"white\",\n                    border: \"none\",\n                    borderRadius: \"5px\",\n                    cursor: bookingStatus ? \"not-allowed\" : \"pointer\",\n                  }}\n                >\n                  {slot}\n                </button>\n              ))}\n            </div>\n          ))\n        ) : (\n          <p>No offices found.</p>\n        )}\n      </div>\n\n      {/* Google Map */}\n      <div style={mapStyle}>\n        <LoadScript googleMapsApiKey=\"AIzaSyDGBHVURcrUdjYNhCDNjFBWawsv612pQU0\n\">\n          <GoogleMap mapContainerStyle={{ width: \"100%\", height: \"100%\" }} center={{ lat: 40.7128, lng: -74.006 }} zoom={12}>\n            {offices.map((office) =>\n              office.location ? (\n                <Marker key={office.id} position={office.location} onClick={() => setSelectedOffice(office)} />\n              ) : null\n            )}\n\n            {selectedOffice && (\n              <InfoWindow position={selectedOffice.location} onCloseClick={() => setSelectedOffice(null)}>\n                <div>\n                  <h3>{selectedOffice.name}</h3>\n                  <p>{selectedOffice.address}</p>\n                  <p>{selectedOffice.city}, {selectedOffice.state}, {selectedOffice.zipCode}</p>\n                  <p><strong>Phone:</strong> {selectedOffice.phone}</p>\n                  <p><strong>Email:</strong> <a href={`mailto:${selectedOffice.email}`}>{selectedOffice.email}</a></p>\n                  {selectedOffice.website && (\n                    <p><strong>Website:</strong> <a href={selectedOffice.website} target=\"_blank\" rel=\"noopener noreferrer\">{selectedOffice.website}</a></p>\n                  )}\n                  <p><strong>Available Slots:</strong></p>\n                  {selectedOffice.availableSlots.map((slot, index) => (\n                    <button\n                      key={index}\n                      onClick={() => handleBooking(selectedOffice.id, slot)}\n                      style={{\n                        margin: \"5px\",\n                        padding: \"10px\",\n                        backgroundColor: \"#28a745\",\n                        color: \"white\",\n                        border: \"none\",\n                        borderRadius: \"5px\",\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      {slot}\n                    </button>\n                  ))}\n                </div>\n              </InfoWindow>\n            )}\n          </GoogleMap>\n        </LoadScript>\n      </div>\n    </div>\n  );\n};\n\nexport default PublicMapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}