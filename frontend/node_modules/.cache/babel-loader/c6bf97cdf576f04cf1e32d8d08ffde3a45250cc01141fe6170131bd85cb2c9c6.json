{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";// âœ… Import useNavigate\nimport axios from\"axios\";import\"./Login.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=_ref=>{let{onLogin}=_ref;const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");const[message,setMessage]=useState(\"\");const navigate=useNavigate();// âœ… Initialize navigation\nconst handleLogin=async()=>{try{console.log(\"Attempting login with:\",email,password);const response=await axios.post(\"http://localhost:5000/login\",{email,password});console.log(\"Server response:\",response.data);if(response.data.success){onLogin(response.data.office);setError(\"\");navigate(\"/dashboard\");// âœ… Redirect to dashboard after login\n}else{setError(response.data.message||\"Invalid credentials.\");}}catch(error){var _error$response;console.error(\"Login failed:\",((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);setError(\"Invalid credentials. Please try again.\");}};const handleForgotPassword=async()=>{if(!email){setError(\"Enter your email to reset password.\");return;}try{const response=await axios.post(\"http://localhost:5000/forgot-password\",{email});setMessage(response.data.message);setError(\"\");}catch(error){setError(\"Failed to send reset link.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"How It Works\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to **Find Open Dentist**. This platform allows dental offices to list their **real-time availability**, making it easy for patients to book open slots instantly.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCC Steps for Dental Offices:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDD39 **Login** with your registered email and password.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDD39 **Manage Your Profile** \\u2013 Update office details, phone number, and website.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDD39 **Set Availability** \\u2013 Select available time slots for appointments.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDD39 **Patients Can Book** \\u2013 Open slots will be visible for patients to schedule visits.\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Need Help?\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click **Forgot Password** if you need to reset your login credentials.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Office Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter your password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{className:\"forgot-password\",onClick:handleForgotPassword,children:\"Forgot Password?\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:message})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Login","_ref","onLogin","email","setEmail","password","setPassword","error","setError","message","setMessage","navigate","handleLogin","console","log","response","post","data","success","office","_error$response","handleForgotPassword","className","children","type","placeholder","value","onChange","e","target","onClick"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // âœ… Import useNavigate\nimport axios from \"axios\";\nimport \"./Login.css\";\n\nconst Login = ({ onLogin }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const navigate = useNavigate(); // âœ… Initialize navigation\n\n  const handleLogin = async () => {\n    try {\n      console.log(\"Attempting login with:\", email, password);\n      const response = await axios.post(\"http://localhost:5000/login\", { email, password });\n      console.log(\"Server response:\", response.data);\n\n      if (response.data.success) {\n        onLogin(response.data.office);\n        setError(\"\");\n        navigate(\"/dashboard\"); // âœ… Redirect to dashboard after login\n      } else {\n        setError(response.data.message || \"Invalid credentials.\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error.response?.data || error.message);\n      setError(\"Invalid credentials. Please try again.\");\n    }\n  };\n\n  const handleForgotPassword = async () => {\n    if (!email) {\n      setError(\"Enter your email to reset password.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/forgot-password\", { email });\n      setMessage(response.data.message);\n      setError(\"\");\n    } catch (error) {\n      setError(\"Failed to send reset link.\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      {/* ðŸ“Œ Instructions Section */}\n      <div className=\"instructions\">\n        <h2>How It Works</h2>\n        <p>Welcome to **Find Open Dentist**. This platform allows dental offices to list their **real-time availability**, making it easy for patients to book open slots instantly.</p>\n\n        <h3>ðŸ“Œ Steps for Dental Offices:</h3>\n        <ul>\n          <li>ðŸ”¹ **Login** with your registered email and password.</li>\n          <li>ðŸ”¹ **Manage Your Profile** â€“ Update office details, phone number, and website.</li>\n          <li>ðŸ”¹ **Set Availability** â€“ Select available time slots for appointments.</li>\n          <li>ðŸ”¹ **Patients Can Book** â€“ Open slots will be visible for patients to schedule visits.</li>\n        </ul>\n\n        <h3>Need Help?</h3>\n        <p>Click **Forgot Password** if you need to reset your login credentials.</p>\n      </div>\n\n      {/* ðŸ“Œ Login Form Section */}\n      <div className=\"login-form\">\n        <h2>Office Login</h2>\n        <input type=\"email\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" placeholder=\"Enter your password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        <button onClick={handleLogin}>Login</button>\n        <button className=\"forgot-password\" onClick={handleForgotPassword}>Forgot Password?</button>\n\n        {error && <p className=\"error-message\">{error}</p>}\n        {message && <p className=\"success-message\">{message}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}