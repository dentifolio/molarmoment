{"ast":null,"code":"var _jsxFileName = \"/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, Marker, InfoWindow } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst PublicMapView = () => {\n  _s();\n  const [offices, setOffices] = useState([]); // ✅ Ensure offices is always initialized\n  const [selectedOffice, setSelectedOffice] = useState(null);\n  useEffect(() => {\n    console.log(\"Fetching active offices...\");\n    fetchActiveOffices();\n  }, []);\n  const fetchActiveOffices = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/active-offices');\n      console.log(\"Active offices fetched:\", response.data);\n      setOffices(response.data); // ✅ Set state properly\n    } catch (error) {\n      console.error('Error fetching active offices:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Map Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 12,\n      children: [offices.length > 0 && offices.map(office => {\n        if (!office.location || !office.location.lat || !office.location.lng) {\n          console.warn(\"Skipping office with missing location:\", office);\n          return null;\n        }\n        console.log(\"Rendering marker for:\", office.name, \"at\", office.location);\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: office.location.lat,\n            lng: office.location.lng\n          },\n          onClick: () => setSelectedOffice(office)\n        }, office.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      }), selectedOffice && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: selectedOffice.location,\n        onCloseClick: () => setSelectedOffice(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedOffice.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicMapView, \"65A3b2+X2KaquF3wFDr6JCHAi/Y=\");\n_c = PublicMapView;\nexport default PublicMapView;\nvar _c;\n$RefreshReg$(_c, \"PublicMapView\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","Marker","InfoWindow","axios","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","PublicMapView","_s","offices","setOffices","selectedOffice","setSelectedOffice","console","log","fetchActiveOffices","response","get","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","length","map","office","location","warn","name","position","onClick","id","onCloseClick","_c","$RefreshReg$"],"sources":["/Users/tmoney/Desktop/mvp2/frontend/src/PublicMapView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, Marker, InfoWindow } from '@react-google-maps/api';\nimport axios from 'axios';\n\nconst containerStyle = {\n  width: '100%',\n  height: '500px',\n};\n\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060,\n};\n\nconst PublicMapView = () => {\n  const [offices, setOffices] = useState([]);  // ✅ Ensure offices is always initialized\n  const [selectedOffice, setSelectedOffice] = useState(null);\n\n  useEffect(() => {\n    console.log(\"Fetching active offices...\");\n    fetchActiveOffices();\n  }, []);\n\n  const fetchActiveOffices = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/active-offices');\n      console.log(\"Active offices fetched:\", response.data);\n      setOffices(response.data);  // ✅ Set state properly\n    } catch (error) {\n      console.error('Error fetching active offices:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Map Loading...</h1>\n      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={12}>\n        {offices.length > 0 && offices.map((office) => {\n          if (!office.location || !office.location.lat || !office.location.lng) {\n            console.warn(\"Skipping office with missing location:\", office);\n            return null;\n          }\n          console.log(\"Rendering marker for:\", office.name, \"at\", office.location);\n          return (\n            <Marker\n              key={office.id}\n              position={{ lat: office.location.lat, lng: office.location.lng }}\n              onClick={() => setSelectedOffice(office)}\n            />\n          );\n        })}\n        {selectedOffice && (\n          <InfoWindow\n            position={selectedOffice.location}\n            onCloseClick={() => setSelectedOffice(null)}\n          >\n            <div>\n              <h2>{selectedOffice.name}</h2>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default PublicMapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}